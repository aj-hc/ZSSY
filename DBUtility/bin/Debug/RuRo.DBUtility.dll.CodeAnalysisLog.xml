<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="H:\Repository\SZY\DBUtility\bin\Debug\RuRo.DBUtility.dll">
   <Modules>
    <Module Name="ruro.dbutility.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">用强名称密钥对 'RuRo.DBUtility.dll' 进行签名。</Issue>
      </Message>
      <Message Id="Ro" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">更正程序集名称 'RuRo.DBUtility.dll' 中“Ro”的大小写，将其改为“RO”。</Issue>
      </Message>
      <Message Id="Ru" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">更正程序集名称 'RuRo.DBUtility.dll' 中“Ru”的大小写，将其改为“RU”。</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">使用 CLSCompliant(true)来标记 'RuRo.DBUtility.dll'，因为它公开外部可见的类型。</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithComVisible" Category="Microsoft.Design" CheckId="CA1017" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
       <Issue Name="NoAttribute" Certainty="95" Level="CriticalError">因为 'RuRo.DBUtility.dll' 公开外部可见的类型，请在程序集级别使用 ComVisible(false)来标记它，然后使用 ComVisible(true)来标记该程序集内应当向 COM 客户端公开的所有类型。</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Maticsoft.DBUtility">
       <Types>
        <Type Name="BaseSqlMapDao" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteDelete(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="BaseSqlMapDao.cs" Line="171">在成员 'BaseSqlMapDao.ExecuteDelete(string, object)' 中，考虑将参数名称 'parameterObject' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteInsert(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="BaseSqlMapDao.cs" Line="137">在成员 'BaseSqlMapDao.ExecuteInsert(string, object)' 中，考虑将参数名称 'parameterObject' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteQueryForList`1(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="BaseSqlMapDao.cs" Line="61">在成员 'BaseSqlMapDao.ExecuteQueryForList&lt;T&gt;(string, object)' 中，考虑将参数名称 'parameterObject' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteQueryForList`1(System.String,System.Object,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="BaseSqlMapDao.cs" Line="82">在成员 'BaseSqlMapDao.ExecuteQueryForList&lt;T&gt;(string, object, int, int)' 中，考虑将参数名称 'parameterObject' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteQueryForObject`1(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="BaseSqlMapDao.cs" Line="120">在成员 'BaseSqlMapDao.ExecuteQueryForObject&lt;T&gt;(string, object)' 中，考虑将参数名称 'parameterObject' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteQueryForPaginatedList(System.String,System.Object,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="BaseSqlMapDao.cs" Line="101">在成员 'BaseSqlMapDao.ExecuteQueryForPaginatedList(string, object, int)' 中，考虑将参数名称 'parameterObject' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteUpdate(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="BaseSqlMapDao.cs" Line="154">在成员 'BaseSqlMapDao.ExecuteUpdate(string, object)' 中，考虑将参数名称 'parameterObject' 中的数据类型标识符“Object”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CommandInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CommandText" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CommandInfo.CommandText' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EffentNextType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CommandInfo.EffentNextType' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OriginalData" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CommandInfo.OriginalData' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parameters" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CommandInfo.Parameters' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShareObject" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'CommandInfo.ShareObject' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperMySQL" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">将 'DbHelperMySQL' 中所有公共构造函数的可访问性改为 protected。</Issue>
          </Message>
          <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperMySQL' 中“Db”的大小写，将其改为“DB”。</Issue>
          </Message>
          <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperMySQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#connectionString" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'DbHelperMySQL.connectionString' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="457">在成员 'DbHelperMySQL.ExecuteReader(string)' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="466">'DbHelperMySQL.ExecuteReader(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="459">在方法 'DbHelperMySQL.ExecuteReader(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="458">在方法 'DbHelperMySQL.ExecuteReader(string)' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="459">传递给 'DbHelperMySQL.ExecuteReader(string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="785">在成员 'DbHelperMySQL.ExecuteReader(string, params MySqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="785">在成员 'DbHelperMySQL.ExecuteReader(string, params MySqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="795">'DbHelperMySQL.ExecuteReader(string, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="787">在方法 'DbHelperMySQL.ExecuteReader(string, params MySqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="786">在方法 'DbHelperMySQL.ExecuteReader(string, params MySqlParameter[])' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="106">在成员 'DbHelperMySQL.ExecuteSql(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="106">在成员 'DbHelperMySQL.ExecuteSql(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="117">'DbHelperMySQL.ExecuteSql(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="120">可以在方法 'DbHelperMySQL.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 120</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="109">传递给 'DbHelperMySQL.ExecuteSql(string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="527">在成员 'DbHelperMySQL.ExecuteSql(string, params MySqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="527">在成员 'DbHelperMySQL.ExecuteSql(string, params MySqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="539">'DbHelperMySQL.ExecuteSql(string, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="297">在成员 'DbHelperMySQL.ExecuteSql(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="297">在成员 'DbHelperMySQL.ExecuteSql(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="310">'DbHelperMySQL.ExecuteSql(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="318">可以在方法 'DbHelperMySQL.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 318</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="300">在方法 'DbHelperMySQL.ExecuteSql(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="300">传递给 'DbHelperMySQL.ExecuteSql(string, string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlByTime(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="127">在成员 'DbHelperMySQL.ExecuteSqlByTime(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="127">在成员 'DbHelperMySQL.ExecuteSqlByTime(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="127">在成员 'DbHelperMySQL.ExecuteSqlByTime(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="139">'DbHelperMySQL.ExecuteSqlByTime(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="142">可以在方法 'DbHelperMySQL.ExecuteSqlByTime(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 142</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="130">传递给 'DbHelperMySQL.ExecuteSqlByTime(string, int)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlGet(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="328">在成员 'DbHelperMySQL.ExecuteSqlGet(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="328">在成员 'DbHelperMySQL.ExecuteSqlGet(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="348">'DbHelperMySQL.ExecuteSqlGet(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="356">可以在方法 'DbHelperMySQL.ExecuteSqlGet(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 356</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="331">在方法 'DbHelperMySQL.ExecuteSqlGet(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="331">传递给 'DbHelperMySQL.ExecuteSqlGet(string, string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="366">在成员 'DbHelperMySQL.ExecuteSqlInsertImg(string, byte[])' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="379">'DbHelperMySQL.ExecuteSqlInsertImg(string, byte[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="387">可以在方法 'DbHelperMySQL.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 387</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="369">在方法 'DbHelperMySQL.ExecuteSqlInsertImg(string, byte[])' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="369">传递给 'DbHelperMySQL.ExecuteSqlInsertImg(string, byte[])' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="586">更改 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="604">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="616">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="604">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="592">在方法 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="596">在外部可见方法 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中，请在使用参数“cmdList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;,System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="155">更改 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="155">更改 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="175">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="197">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="212">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="218">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="227">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="237">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="243">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="248">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="172">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="194">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="185">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="207">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="172">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="194">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="159">在方法 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="165">在外部可见方法 'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中，请在使用参数“list”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="283">修改 'DbHelperMySQL.ExecuteSqlTran(List&lt;string&gt;)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="260">更改 'DbHelperMySQL.ExecuteSqlTran(List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="260">在成员 'DbHelperMySQL.ExecuteSqlTran(List&lt;string&gt;)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="264">在方法 'DbHelperMySQL.ExecuteSqlTran(List&lt;string&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="276">传递给 'DbHelperMySQL.ExecuteSqlTran(List&lt;string&gt;)' 中的 'MySqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="271">在外部可见方法 'DbHelperMySQL.ExecuteSqlTran(List&lt;string&gt;)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="553">在成员 'DbHelperMySQL.ExecuteSqlTran(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="568">'DbHelperMySQL.ExecuteSqlTran(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="559">在方法 'DbHelperMySQL.ExecuteSqlTran(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="563">在外部可见方法 'DbHelperMySQL.ExecuteSqlTran(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTranWithIndentity(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="655">更改 'DbHelperMySQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="655">在成员 'DbHelperMySQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="678">'DbHelperMySQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="683">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="661">在方法 'DbHelperMySQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="666">在外部可见方法 'DbHelperMySQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTranWithIndentity(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="703">在成员 'DbHelperMySQL.ExecuteSqlTranWithIndentity(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="726">'DbHelperMySQL.ExecuteSqlTranWithIndentity(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="731">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.ExecuteSqlTranWithIndentity(Hashtable)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="709">在方法 'DbHelperMySQL.ExecuteSqlTranWithIndentity(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="714">在外部可见方法 'DbHelperMySQL.ExecuteSqlTranWithIndentity(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="58">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.Exists(string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="85">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.Exists(string, params MySqlParameter[])' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxID(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Field" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="31">在成员 'DbHelperMySQL.GetMaxID(string, string)' 中，更正参数名称 'FieldName' 中“Field”的大小写，将其改为“field”。</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="31">更正成员名称 'DbHelperMySQL.GetMaxID(string, string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="31">在成员 'DbHelperMySQL.GetMaxID(string, string)' 中，更正参数名称 'TableName' 中“Table”的大小写，将其改为“table”。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="40">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperMySQL.GetMaxID(string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="397">在成员 'DbHelperMySQL.GetSingle(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="397">在成员 'DbHelperMySQL.GetSingle(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="415">'DbHelperMySQL.GetSingle(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="418">可以在方法 'DbHelperMySQL.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 418</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="400">传递给 'DbHelperMySQL.GetSingle(string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="752">在成员 'DbHelperMySQL.GetSingle(string, params MySqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="752">在成员 'DbHelperMySQL.GetSingle(string, params MySqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="771">'DbHelperMySQL.GetSingle(string, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="424">在成员 'DbHelperMySQL.GetSingle(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="424">在成员 'DbHelperMySQL.GetSingle(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="424">在成员 'DbHelperMySQL.GetSingle(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="443">'DbHelperMySQL.GetSingle(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="446">可以在方法 'DbHelperMySQL.GetSingle(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 446</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="427">传递给 'DbHelperMySQL.GetSingle(string, int)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(MySql.Data.MySqlClient.MySqlCommand,MySql.Data.MySqlClient.MySqlConnection,MySql.Data.MySqlClient.MySqlTransaction,System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="841">传递给 'DbHelperMySQL.PrepareCommand(MySqlCommand, MySqlConnection, MySqlTransaction, string, MySqlParameter[])' 中的 'MySqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="490">'DbHelperMySQL.Query(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="478">在成员 'DbHelperMySQL.Query(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="478">在成员 'DbHelperMySQL.Query(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="481">只要 'DbHelperMySQL.Query(string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="481">在方法 'DbHelperMySQL.Query(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="485">在方法 'DbHelperMySQL.Query(string)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="485">传递给 'DbHelperMySQL.Query(string)' 中的 'MySqlDataAdapter.MySqlDataAdapter(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="828">'DbHelperMySQL.Query(string, params MySqlParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="813">在成员 'DbHelperMySQL.Query(string, params MySqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="813">在成员 'DbHelperMySQL.Query(string, params MySqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="820">只要 'DbHelperMySQL.Query(string, params MySqlParameter[])' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="820">在方法 'DbHelperMySQL.Query(string, params MySqlParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="816">在方法 'DbHelperMySQL.Query(string, params MySqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="509">'DbHelperMySQL.Query(string, int)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="496">在成员 'DbHelperMySQL.Query(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="496">在成员 'DbHelperMySQL.Query(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="496">在成员 'DbHelperMySQL.Query(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="499">只要 'DbHelperMySQL.Query(string, int)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="499">在方法 'DbHelperMySQL.Query(string, int)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="503">在方法 'DbHelperMySQL.Query(string, int)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperMySQL.cs" Line="503">传递给 'DbHelperMySQL.Query(string, int)' 中的 'MySqlDataAdapter.MySqlDataAdapter(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperOleDb" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">将 'DbHelperOleDb' 中所有公共构造函数的可访问性改为 protected。</Issue>
          </Message>
          <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperOleDb' 中“Db”的大小写，将其改为“DB”。</Issue>
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperOleDb' 中“Db”的大小写，将其改为“DB”。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#connectionString" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'DbHelperOleDb.connectionString' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="257">'DbHelperOleDb.ExecuteReader(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="246">在成员 'DbHelperOleDb.ExecuteReader(string)' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="248">在方法 'DbHelperOleDb.ExecuteReader(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="247">在方法 'DbHelperOleDb.ExecuteReader(string)' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="248">传递给 'DbHelperOleDb.ExecuteReader(string)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="404">'DbHelperOleDb.ExecuteReader(string, params OleDbParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="392">在成员 'DbHelperOleDb.ExecuteReader(string, params OleDbParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="392">在成员 'DbHelperOleDb.ExecuteReader(string, params OleDbParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="394">在方法 'DbHelperOleDb.ExecuteReader(string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="393">在方法 'DbHelperOleDb.ExecuteReader(string, params OleDbParameter[])' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="106">'DbHelperOleDb.ExecuteSql(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="92">在成员 'DbHelperOleDb.ExecuteSql(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="92">在成员 'DbHelperOleDb.ExecuteSql(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="106">可以在方法 'DbHelperOleDb.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 106</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="95">传递给 'DbHelperOleDb.ExecuteSql(string)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="310">'DbHelperOleDb.ExecuteSql(string, params OleDbParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="296">在成员 'DbHelperOleDb.ExecuteSql(string, params OleDbParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="296">在成员 'DbHelperOleDb.ExecuteSql(string, params OleDbParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="167">'DbHelperOleDb.ExecuteSql(string, string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="152">在成员 'DbHelperOleDb.ExecuteSql(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="152">在成员 'DbHelperOleDb.ExecuteSql(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="173">可以在方法 'DbHelperOleDb.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 173</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="155">在方法 'DbHelperOleDb.ExecuteSql(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="155">传递给 'DbHelperOleDb.ExecuteSql(string, string)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="198">'DbHelperOleDb.ExecuteSqlInsertImg(string, byte[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="183">在成员 'DbHelperOleDb.ExecuteSqlInsertImg(string, byte[])' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="204">可以在方法 'DbHelperOleDb.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 204</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="186">在方法 'DbHelperOleDb.ExecuteSqlInsertImg(string, byte[])' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="186">传递给 'DbHelperOleDb.ExecuteSqlInsertImg(string, byte[])' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.ArrayList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="141">'DbHelperOleDb.ExecuteSqlTran(ArrayList)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="117">在成员 'DbHelperOleDb.ExecuteSqlTran(ArrayList)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="121">在方法 'DbHelperOleDb.ExecuteSqlTran(ArrayList)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="132">传递给 'DbHelperOleDb.ExecuteSqlTran(ArrayList)' 中的 'OleDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="127">在外部可见方法 'DbHelperOleDb.ExecuteSqlTran(ArrayList)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="322">在成员 'DbHelperOleDb.ExecuteSqlTran(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="337">'DbHelperOleDb.ExecuteSqlTran(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="328">在方法 'DbHelperOleDb.ExecuteSqlTran(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="332">在外部可见方法 'DbHelperOleDb.ExecuteSqlTran(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="49">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperOleDb.Exists(string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="70">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperOleDb.Exists(string, params OleDbParameter[])' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxID(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Field" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="27">在成员 'DbHelperOleDb.GetMaxID(string, string)' 中，更正参数名称 'FieldName' 中“Field”的大小写，将其改为“field”。</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="27">更正成员名称 'DbHelperOleDb.GetMaxID(string, string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="27">在成员 'DbHelperOleDb.GetMaxID(string, string)' 中，更正参数名称 'TableName' 中“Table”的大小写，将其改为“table”。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="36">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperOleDb.GetMaxID(string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="235">'DbHelperOleDb.GetSingle(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="214">在成员 'DbHelperOleDb.GetSingle(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="214">在成员 'DbHelperOleDb.GetSingle(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="235">可以在方法 'DbHelperOleDb.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 235</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="217">传递给 'DbHelperOleDb.GetSingle(string)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="380">'DbHelperOleDb.GetSingle(string, params OleDbParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="359">在成员 'DbHelperOleDb.GetSingle(string, params OleDbParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="359">在成员 'DbHelperOleDb.GetSingle(string, params OleDbParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OleDb.OleDbCommand,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="443">传递给 'DbHelperOleDb.PrepareCommand(OleDbCommand, OleDbConnection, OleDbTransaction, string, OleDbParameter[])' 中的 'OleDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="279">'DbHelperOleDb.Query(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="267">在成员 'DbHelperOleDb.Query(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="267">在成员 'DbHelperOleDb.Query(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="270">只要 'DbHelperOleDb.Query(string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="270">在方法 'DbHelperOleDb.Query(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="274">在方法 'DbHelperOleDb.Query(string)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="274">传递给 'DbHelperOleDb.Query(string)' 中的 'OleDbDataAdapter.OleDbDataAdapter(string, OleDbConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="430">'DbHelperOleDb.Query(string, params OleDbParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="415">在成员 'DbHelperOleDb.Query(string, params OleDbParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="415">在成员 'DbHelperOleDb.Query(string, params OleDbParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="422">只要 'DbHelperOleDb.Query(string, params OleDbParameter[])' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="422">在方法 'DbHelperOleDb.Query(string, params OleDbParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOleDb.cs" Line="418">在方法 'DbHelperOleDb.Query(string, params OleDbParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperOra" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">将 'DbHelperOra' 中所有公共构造函数的可访问性改为 protected。</Issue>
          </Message>
          <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperOra' 中“Db”的大小写，将其改为“DB”。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BuildQueryCommand(System.Data.OracleClient.OracleConnection,System.String,System.Data.IDataParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="509">在方法 'DbHelperOra.BuildQueryCommand(OracleConnection, string, IDataParameter[])' 中，'command' 对象未按所有异常路径释放。请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="509">传递给 'DbHelperOra.BuildQueryCommand(OracleConnection, string, IDataParameter[])' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'storedProcName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#connectionString" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'DbHelperOra.connectionString' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="259">'DbHelperOra.ExecuteReader(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="248">在成员 'DbHelperOra.ExecuteReader(string)' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="250">在方法 'DbHelperOra.ExecuteReader(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="249">在方法 'DbHelperOra.ExecuteReader(string)' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="250">传递给 'DbHelperOra.ExecuteReader(string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="406">'DbHelperOra.ExecuteReader(string, params OracleParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="394">在成员 'DbHelperOra.ExecuteReader(string, params OracleParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="394">在成员 'DbHelperOra.ExecuteReader(string, params OracleParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="396">在方法 'DbHelperOra.ExecuteReader(string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="395">在方法 'DbHelperOra.ExecuteReader(string, params OracleParameter[])' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="108">'DbHelperOra.ExecuteSql(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="94">在成员 'DbHelperOra.ExecuteSql(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="94">在成员 'DbHelperOra.ExecuteSql(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="108">可以在方法 'DbHelperOra.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 108</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="97">传递给 'DbHelperOra.ExecuteSql(string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="312">'DbHelperOra.ExecuteSql(string, params OracleParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="298">在成员 'DbHelperOra.ExecuteSql(string, params OracleParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="298">在成员 'DbHelperOra.ExecuteSql(string, params OracleParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="169">'DbHelperOra.ExecuteSql(string, string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="154">在成员 'DbHelperOra.ExecuteSql(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="154">在成员 'DbHelperOra.ExecuteSql(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="175">可以在方法 'DbHelperOra.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 175</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="157">在方法 'DbHelperOra.ExecuteSql(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="157">传递给 'DbHelperOra.ExecuteSql(string, string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="200">'DbHelperOra.ExecuteSqlInsertImg(string, byte[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="185">在成员 'DbHelperOra.ExecuteSqlInsertImg(string, byte[])' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="206">可以在方法 'DbHelperOra.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 206</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="188">在方法 'DbHelperOra.ExecuteSqlInsertImg(string, byte[])' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="188">传递给 'DbHelperOra.ExecuteSqlInsertImg(string, byte[])' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.ArrayList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="143">'DbHelperOra.ExecuteSqlTran(ArrayList)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="119">在成员 'DbHelperOra.ExecuteSqlTran(ArrayList)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="123">在方法 'DbHelperOra.ExecuteSqlTran(ArrayList)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="134">传递给 'DbHelperOra.ExecuteSqlTran(ArrayList)' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="129">在外部可见方法 'DbHelperOra.ExecuteSqlTran(ArrayList)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="324">在成员 'DbHelperOra.ExecuteSqlTran(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="339">'DbHelperOra.ExecuteSqlTran(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="330">在方法 'DbHelperOra.ExecuteSqlTran(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="334">在外部可见方法 'DbHelperOra.ExecuteSqlTran(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="48">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperOra.Exists(string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="70">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperOra.Exists(string, params OracleParameter[])' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxID(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Field" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="26">在成员 'DbHelperOra.GetMaxID(string, string)' 中，更正参数名称 'FieldName' 中“Field”的大小写，将其改为“field”。</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="26">更正成员名称 'DbHelperOra.GetMaxID(string, string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="26">在成员 'DbHelperOra.GetMaxID(string, string)' 中，更正参数名称 'TableName' 中“Table”的大小写，将其改为“table”。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="35">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperOra.GetMaxID(string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="237">'DbHelperOra.GetSingle(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="216">在成员 'DbHelperOra.GetSingle(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="216">在成员 'DbHelperOra.GetSingle(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="237">可以在方法 'DbHelperOra.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 237</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="219">传递给 'DbHelperOra.GetSingle(string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="382">'DbHelperOra.GetSingle(string, params OracleParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="361">在成员 'DbHelperOra.GetSingle(string, params OracleParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="361">在成员 'DbHelperOra.GetSingle(string, params OracleParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OracleClient.OracleCommand,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="445">传递给 'DbHelperOra.PrepareCommand(OracleCommand, OracleConnection, OracleTransaction, string, OracleParameter[])' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="281">'DbHelperOra.Query(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="269">在成员 'DbHelperOra.Query(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="269">在成员 'DbHelperOra.Query(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="272">只要 'DbHelperOra.Query(string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="272">在方法 'DbHelperOra.Query(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="276">在方法 'DbHelperOra.Query(string)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="276">传递给 'DbHelperOra.Query(string)' 中的 'OracleDataAdapter.OracleDataAdapter(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="432">'DbHelperOra.Query(string, params OracleParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="417">在成员 'DbHelperOra.Query(string, params OracleParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="417">在成员 'DbHelperOra.Query(string, params OracleParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="424">只要 'DbHelperOra.Query(string, params OracleParameter[])' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="424">在方法 'DbHelperOra.Query(string, params OracleParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="420">在方法 'DbHelperOra.Query(string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="468">在方法 'DbHelperOra.RunProcedure(string, IDataParameter[])' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="526">考虑使用不需要将 'rowsAffected' 作为 out 参数的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="489">只要 'DbHelperOra.RunProcedure(string, IDataParameter[], string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="495">可以在方法 'DbHelperOra.RunProcedure(string, IDataParameter[], string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 495</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="489">在方法 'DbHelperOra.RunProcedure(string, IDataParameter[], string)' 中，'dataSet' 对象未按所有异常路径释放。请在对 'dataSet' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperOra.cs" Line="491">在方法 'DbHelperOra.RunProcedure(string, IDataParameter[], string)' 中，请在对 'sqlDA' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperSQL" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">将 'DbHelperSQL' 中所有公共构造函数的可访问性改为 protected。</Issue>
          </Message>
          <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperSQL' 中“Db”的大小写，将其改为“DB”。</Issue>
          </Message>
          <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BuildQueryCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="954">在方法 'DbHelperSQL.BuildQueryCommand(SqlConnection, string, IDataParameter[])' 中，'command' 对象未按所有异常路径释放。请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="954">传递给 'DbHelperSQL.BuildQueryCommand(SqlConnection, string, IDataParameter[])' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'storedProcName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ColumnExists(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="38">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ColumnExists(string, string)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#connectionString" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'DbHelperSQL.connectionString' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="484">在成员 'DbHelperSQL.ExecuteReader(string)' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="493">'DbHelperSQL.ExecuteReader(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="486">在方法 'DbHelperSQL.ExecuteReader(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="485">在方法 'DbHelperSQL.ExecuteReader(string)' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="486">传递给 'DbHelperSQL.ExecuteReader(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="812">在成员 'DbHelperSQL.ExecuteReader(string, params SqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="812">在成员 'DbHelperSQL.ExecuteReader(string, params SqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="822">'DbHelperSQL.ExecuteReader(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="814">在方法 'DbHelperSQL.ExecuteReader(string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="813">在方法 'DbHelperSQL.ExecuteReader(string, params SqlParameter[])' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="133">在成员 'DbHelperSQL.ExecuteSql(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="133">在成员 'DbHelperSQL.ExecuteSql(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="144">'DbHelperSQL.ExecuteSql(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="147">可以在方法 'DbHelperSQL.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 147</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="136">传递给 'DbHelperSQL.ExecuteSql(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="554">在成员 'DbHelperSQL.ExecuteSql(string, params SqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="554">在成员 'DbHelperSQL.ExecuteSql(string, params SqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="566">'DbHelperSQL.ExecuteSql(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="324">在成员 'DbHelperSQL.ExecuteSql(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="324">在成员 'DbHelperSQL.ExecuteSql(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="337">'DbHelperSQL.ExecuteSql(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="345">可以在方法 'DbHelperSQL.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 345</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="327">在方法 'DbHelperSQL.ExecuteSql(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="327">传递给 'DbHelperSQL.ExecuteSql(string, string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlByTime(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="154">在成员 'DbHelperSQL.ExecuteSqlByTime(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="154">在成员 'DbHelperSQL.ExecuteSqlByTime(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="154">在成员 'DbHelperSQL.ExecuteSqlByTime(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="166">'DbHelperSQL.ExecuteSqlByTime(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="169">可以在方法 'DbHelperSQL.ExecuteSqlByTime(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 169</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="157">传递给 'DbHelperSQL.ExecuteSqlByTime(string, int)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlGet(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="355">在成员 'DbHelperSQL.ExecuteSqlGet(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="355">在成员 'DbHelperSQL.ExecuteSqlGet(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="375">'DbHelperSQL.ExecuteSqlGet(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="383">可以在方法 'DbHelperSQL.ExecuteSqlGet(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 383</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="358">在方法 'DbHelperSQL.ExecuteSqlGet(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="358">传递给 'DbHelperSQL.ExecuteSqlGet(string, string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="393">在成员 'DbHelperSQL.ExecuteSqlInsertImg(string, byte[])' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="406">'DbHelperSQL.ExecuteSqlInsertImg(string, byte[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="414">可以在方法 'DbHelperSQL.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 414</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="396">在方法 'DbHelperSQL.ExecuteSqlInsertImg(string, byte[])' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="396">传递给 'DbHelperSQL.ExecuteSqlInsertImg(string, byte[])' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="613">更改 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="631">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="643">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="631">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="619">在方法 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="623">在外部可见方法 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中，请在使用参数“cmdList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;,System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="182">更改 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="182">更改 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="202">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="224">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="239">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="245">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="254">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="264">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="270">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="275">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="199">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="221">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="212">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="234">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="199">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="221">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="186">在方法 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="192">在外部可见方法 'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中，请在使用参数“list”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="310">修改 'DbHelperSQL.ExecuteSqlTran(List&lt;string&gt;)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="287">更改 'DbHelperSQL.ExecuteSqlTran(List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="287">在成员 'DbHelperSQL.ExecuteSqlTran(List&lt;string&gt;)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="291">在方法 'DbHelperSQL.ExecuteSqlTran(List&lt;string&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="303">传递给 'DbHelperSQL.ExecuteSqlTran(List&lt;string&gt;)' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="298">在外部可见方法 'DbHelperSQL.ExecuteSqlTran(List&lt;string&gt;)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="580">在成员 'DbHelperSQL.ExecuteSqlTran(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="595">'DbHelperSQL.ExecuteSqlTran(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="586">在方法 'DbHelperSQL.ExecuteSqlTran(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="590">在外部可见方法 'DbHelperSQL.ExecuteSqlTran(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTranWithIndentity(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="682">更改 'DbHelperSQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="682">在成员 'DbHelperSQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="705">'DbHelperSQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="710">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="688">在方法 'DbHelperSQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="693">在外部可见方法 'DbHelperSQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTranWithIndentity(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="730">在成员 'DbHelperSQL.ExecuteSqlTranWithIndentity(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="753">'DbHelperSQL.ExecuteSqlTranWithIndentity(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="758">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.ExecuteSqlTranWithIndentity(Hashtable)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="736">在方法 'DbHelperSQL.ExecuteSqlTranWithIndentity(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="741">在外部可见方法 'DbHelperSQL.ExecuteSqlTranWithIndentity(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="63">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.Exists(string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="112">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.Exists(string, params SqlParameter[])' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxID(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Field" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="41">在成员 'DbHelperSQL.GetMaxID(string, string)' 中，更正参数名称 'FieldName' 中“Field”的大小写，将其改为“field”。</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="41">更正成员名称 'DbHelperSQL.GetMaxID(string, string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="41">在成员 'DbHelperSQL.GetMaxID(string, string)' 中，更正参数名称 'TableName' 中“Table”的大小写，将其改为“table”。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="50">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.GetMaxID(string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="424">在成员 'DbHelperSQL.GetSingle(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="424">在成员 'DbHelperSQL.GetSingle(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="442">'DbHelperSQL.GetSingle(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="445">可以在方法 'DbHelperSQL.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 445</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="427">传递给 'DbHelperSQL.GetSingle(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="779">在成员 'DbHelperSQL.GetSingle(string, params SqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="779">在成员 'DbHelperSQL.GetSingle(string, params SqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="798">'DbHelperSQL.GetSingle(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="451">在成员 'DbHelperSQL.GetSingle(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="451">在成员 'DbHelperSQL.GetSingle(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="451">在成员 'DbHelperSQL.GetSingle(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="470">'DbHelperSQL.GetSingle(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="473">可以在方法 'DbHelperSQL.GetSingle(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 473</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="454">传递给 'DbHelperSQL.GetSingle(string, int)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="868">传递给 'DbHelperSQL.PrepareCommand(SqlCommand, SqlConnection, SqlTransaction, string, SqlParameter[])' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="517">'DbHelperSQL.Query(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="505">在成员 'DbHelperSQL.Query(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="505">在成员 'DbHelperSQL.Query(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="508">只要 'DbHelperSQL.Query(string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="508">在方法 'DbHelperSQL.Query(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="512">在方法 'DbHelperSQL.Query(string)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="512">传递给 'DbHelperSQL.Query(string)' 中的 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="855">'DbHelperSQL.Query(string, params SqlParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="840">在成员 'DbHelperSQL.Query(string, params SqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="840">在成员 'DbHelperSQL.Query(string, params SqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="847">只要 'DbHelperSQL.Query(string, params SqlParameter[])' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="847">在方法 'DbHelperSQL.Query(string, params SqlParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="843">在方法 'DbHelperSQL.Query(string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="536">'DbHelperSQL.Query(string, int)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="523">在成员 'DbHelperSQL.Query(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="523">在成员 'DbHelperSQL.Query(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="523">在成员 'DbHelperSQL.Query(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="526">只要 'DbHelperSQL.Query(string, int)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="526">在方法 'DbHelperSQL.Query(string, int)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="530">在方法 'DbHelperSQL.Query(string, int)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="530">传递给 'DbHelperSQL.Query(string, int)' 中的 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="898">在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[])' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="981">考虑使用不需要将 'rowsAffected' 作为 out 参数的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="920">只要 'DbHelperSQL.RunProcedure(string, IDataParameter[], string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="926">可以在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[], string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 926</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="920">在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[], string)' 中，'dataSet' 对象未按所有异常路径释放。请在对 'dataSet' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="922">在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[], string)' 中，请在对 'sqlDA' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="930">在成员 'DbHelperSQL.RunProcedure(string, IDataParameter[], string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="933">只要 'DbHelperSQL.RunProcedure(string, IDataParameter[], string, int)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="940">可以在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[], string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 940</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="933">在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[], string, int)' 中，'dataSet' 对象未按所有异常路径释放。请在对 'dataSet' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="935">在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[], string, int)' 中，请在对 'sqlDA' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TabExists(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="80">在成员 'DbHelperSQL.TabExists(string)' 中，更正参数名称 'TableName' 中“Table”的大小写，将其改为“table”。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQL.cs" Line="91">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQL.TabExists(string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperSQLite" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">将 'DbHelperSQLite' 中所有公共构造函数的可访问性改为 protected。</Issue>
          </Message>
          <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperSQLite' 中“Db”的大小写，将其改为“DB”。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#connectionString" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'DbHelperSQLite.connectionString' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="256">'DbHelperSQLite.ExecuteReader(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="245">在成员 'DbHelperSQLite.ExecuteReader(string)' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="247">在方法 'DbHelperSQLite.ExecuteReader(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="246">在方法 'DbHelperSQLite.ExecuteReader(string)' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="247">传递给 'DbHelperSQLite.ExecuteReader(string)' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.SQLite.SQLiteParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="403">'DbHelperSQLite.ExecuteReader(string, params SQLiteParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="391">在成员 'DbHelperSQLite.ExecuteReader(string, params SQLiteParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="391">在成员 'DbHelperSQLite.ExecuteReader(string, params SQLiteParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="393">在方法 'DbHelperSQLite.ExecuteReader(string, params SQLiteParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="392">在方法 'DbHelperSQLite.ExecuteReader(string, params SQLiteParameter[])' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="105">'DbHelperSQLite.ExecuteSql(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="91">在成员 'DbHelperSQLite.ExecuteSql(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="91">在成员 'DbHelperSQLite.ExecuteSql(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="105">可以在方法 'DbHelperSQLite.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 105</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="94">传递给 'DbHelperSQLite.ExecuteSql(string)' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.Data.SQLite.SQLiteParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="309">'DbHelperSQLite.ExecuteSql(string, params SQLiteParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="295">在成员 'DbHelperSQLite.ExecuteSql(string, params SQLiteParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="295">在成员 'DbHelperSQLite.ExecuteSql(string, params SQLiteParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="166">'DbHelperSQLite.ExecuteSql(string, string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="151">在成员 'DbHelperSQLite.ExecuteSql(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="151">在成员 'DbHelperSQLite.ExecuteSql(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="172">可以在方法 'DbHelperSQLite.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 172</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="154">在方法 'DbHelperSQLite.ExecuteSql(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="154">传递给 'DbHelperSQLite.ExecuteSql(string, string)' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="197">'DbHelperSQLite.ExecuteSqlInsertImg(string, byte[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="182">在成员 'DbHelperSQLite.ExecuteSqlInsertImg(string, byte[])' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="203">可以在方法 'DbHelperSQLite.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 203</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="185">在方法 'DbHelperSQLite.ExecuteSqlInsertImg(string, byte[])' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="185">传递给 'DbHelperSQLite.ExecuteSqlInsertImg(string, byte[])' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.ArrayList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="140">'DbHelperSQLite.ExecuteSqlTran(ArrayList)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="116">在成员 'DbHelperSQLite.ExecuteSqlTran(ArrayList)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="120">在方法 'DbHelperSQLite.ExecuteSqlTran(ArrayList)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="131">传递给 'DbHelperSQLite.ExecuteSqlTran(ArrayList)' 中的 'SQLiteCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="126">在外部可见方法 'DbHelperSQLite.ExecuteSqlTran(ArrayList)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="321">在成员 'DbHelperSQLite.ExecuteSqlTran(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="336">'DbHelperSQLite.ExecuteSqlTran(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="327">在方法 'DbHelperSQLite.ExecuteSqlTran(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="331">在外部可见方法 'DbHelperSQLite.ExecuteSqlTran(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="48">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLite.Exists(string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,System.Data.SQLite.SQLiteParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="69">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLite.Exists(string, params SQLiteParameter[])' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxID(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Field" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="26">在成员 'DbHelperSQLite.GetMaxID(string, string)' 中，更正参数名称 'FieldName' 中“Field”的大小写，将其改为“field”。</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="26">更正成员名称 'DbHelperSQLite.GetMaxID(string, string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="26">在成员 'DbHelperSQLite.GetMaxID(string, string)' 中，更正参数名称 'TableName' 中“Table”的大小写，将其改为“table”。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="35">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLite.GetMaxID(string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="234">'DbHelperSQLite.GetSingle(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="213">在成员 'DbHelperSQLite.GetSingle(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="213">在成员 'DbHelperSQLite.GetSingle(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="234">可以在方法 'DbHelperSQLite.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 234</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="216">传递给 'DbHelperSQLite.GetSingle(string)' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Data.SQLite.SQLiteParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="379">'DbHelperSQLite.GetSingle(string, params SQLiteParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="358">在成员 'DbHelperSQLite.GetSingle(string, params SQLiteParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="358">在成员 'DbHelperSQLite.GetSingle(string, params SQLiteParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.SQLite.SQLiteCommand,System.Data.SQLite.SQLiteConnection,System.Data.SQLite.SQLiteTransaction,System.String,System.Data.SQLite.SQLiteParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="442">传递给 'DbHelperSQLite.PrepareCommand(SQLiteCommand, SQLiteConnection, SQLiteTransaction, string, SQLiteParameter[])' 中的 'SQLiteCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="278">'DbHelperSQLite.Query(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="266">在成员 'DbHelperSQLite.Query(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="266">在成员 'DbHelperSQLite.Query(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="269">只要 'DbHelperSQLite.Query(string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="269">在方法 'DbHelperSQLite.Query(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="273">在方法 'DbHelperSQLite.Query(string)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="273">传递给 'DbHelperSQLite.Query(string)' 中的 'SQLiteDataAdapter.SQLiteDataAdapter(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Data.SQLite.SQLiteParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="429">'DbHelperSQLite.Query(string, params SQLiteParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="414">在成员 'DbHelperSQLite.Query(string, params SQLiteParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="414">在成员 'DbHelperSQLite.Query(string, params SQLiteParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="421">只要 'DbHelperSQLite.Query(string, params SQLiteParameter[])' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="421">在方法 'DbHelperSQLite.Query(string, params SQLiteParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLite.cs" Line="417">在方法 'DbHelperSQLite.Query(string, params SQLiteParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperSQLP" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperSQLP' 中“Db”的大小写，将其改为“DB”。</Issue>
          </Message>
          <Message Id="SQLP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DbHelperSQLP' 中“SQLP”的大小写，将其改为“Sqlp”。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Connection" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="18">在成员 'DbHelperSQLP.DbHelperSQLP(string)' 中，更正参数名称 'ConnectionString' 中“Connection”的大小写，将其改为“connection”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildQueryCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="961">在方法 'DbHelperSQLP.BuildQueryCommand(SqlConnection, string, IDataParameter[])' 中，'command' 对象未按所有异常路径释放。请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="961">传递给 'DbHelperSQLP.BuildQueryCommand(SqlConnection, string, IDataParameter[])' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'storedProcName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ColumnExists(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="42">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ColumnExists(string, string)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#connectionString" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'DbHelperSQLP.connectionString' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="488">在成员 'DbHelperSQLP.ExecuteReader(string)' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="497">'DbHelperSQLP.ExecuteReader(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="490">在方法 'DbHelperSQLP.ExecuteReader(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="489">在方法 'DbHelperSQLP.ExecuteReader(string)' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="490">传递给 'DbHelperSQLP.ExecuteReader(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="816">在成员 'DbHelperSQLP.ExecuteReader(string, params SqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="816">在成员 'DbHelperSQLP.ExecuteReader(string, params SqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="826">'DbHelperSQLP.ExecuteReader(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="818">在方法 'DbHelperSQLP.ExecuteReader(string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="817">在方法 'DbHelperSQLP.ExecuteReader(string, params SqlParameter[])' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="137">在成员 'DbHelperSQLP.ExecuteSql(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="137">在成员 'DbHelperSQLP.ExecuteSql(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="148">'DbHelperSQLP.ExecuteSql(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="151">可以在方法 'DbHelperSQLP.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 151</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="140">传递给 'DbHelperSQLP.ExecuteSql(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="558">在成员 'DbHelperSQLP.ExecuteSql(string, params SqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="558">在成员 'DbHelperSQLP.ExecuteSql(string, params SqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="570">'DbHelperSQLP.ExecuteSql(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="328">在成员 'DbHelperSQLP.ExecuteSql(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="328">在成员 'DbHelperSQLP.ExecuteSql(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="341">'DbHelperSQLP.ExecuteSql(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="349">可以在方法 'DbHelperSQLP.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 349</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="331">在方法 'DbHelperSQLP.ExecuteSql(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="331">传递给 'DbHelperSQLP.ExecuteSql(string, string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlByTime(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="158">在成员 'DbHelperSQLP.ExecuteSqlByTime(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="158">在成员 'DbHelperSQLP.ExecuteSqlByTime(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="158">在成员 'DbHelperSQLP.ExecuteSqlByTime(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="170">'DbHelperSQLP.ExecuteSqlByTime(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="173">可以在方法 'DbHelperSQLP.ExecuteSqlByTime(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 173</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="161">传递给 'DbHelperSQLP.ExecuteSqlByTime(string, int)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlGet(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="359">在成员 'DbHelperSQLP.ExecuteSqlGet(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="359">在成员 'DbHelperSQLP.ExecuteSqlGet(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="379">'DbHelperSQLP.ExecuteSqlGet(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="387">可以在方法 'DbHelperSQLP.ExecuteSqlGet(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 387</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="362">在方法 'DbHelperSQLP.ExecuteSqlGet(string, string)' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="362">传递给 'DbHelperSQLP.ExecuteSqlGet(string, string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="397">在成员 'DbHelperSQLP.ExecuteSqlInsertImg(string, byte[])' 中，更正参数名称 'strSQL' 中“SQL”的大小写，将其改为“Sql”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="410">'DbHelperSQLP.ExecuteSqlInsertImg(string, byte[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="418">可以在方法 'DbHelperSQLP.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 418</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="400">在方法 'DbHelperSQLP.ExecuteSqlInsertImg(string, byte[])' 中，'cmd' 对象未按所有异常路径释放。请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="400">传递给 'DbHelperSQLP.ExecuteSqlInsertImg(string, byte[])' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="617">更改 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="635">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="647">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="635">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="623">在方法 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="627">在外部可见方法 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 中，请在使用参数“cmdList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;,System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="186">更改 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="186">更改 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="206">'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="228">'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="243">'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="249">'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="258">'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="268">'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="274">'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="279">'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="203">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="225">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="216">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="238">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="203">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="225">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="190">在方法 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="196">在外部可见方法 'DbHelperSQLP.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 中，请在使用参数“list”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="314">修改 'DbHelperSQLP.ExecuteSqlTran(List&lt;string&gt;)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="291">更改 'DbHelperSQLP.ExecuteSqlTran(List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="291">在成员 'DbHelperSQLP.ExecuteSqlTran(List&lt;string&gt;)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="295">在方法 'DbHelperSQLP.ExecuteSqlTran(List&lt;string&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="307">传递给 'DbHelperSQLP.ExecuteSqlTran(List&lt;string&gt;)' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="302">在外部可见方法 'DbHelperSQLP.ExecuteSqlTran(List&lt;string&gt;)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Hashtable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="584">在成员 'DbHelperSQLP.ExecuteSqlTran(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="599">'DbHelperSQLP.ExecuteSqlTran(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="590">在方法 'DbHelperSQLP.ExecuteSqlTran(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="594">在外部可见方法 'DbHelperSQLP.ExecuteSqlTran(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTranWithIndentity(System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="686">更改 'DbHelperSQLP.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="686">在成员 'DbHelperSQLP.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="709">'DbHelperSQLP.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="714">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="692">在方法 'DbHelperSQLP.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="697">在外部可见方法 'DbHelperSQLP.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTranWithIndentity(System.Collections.Hashtable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="734">在成员 'DbHelperSQLP.ExecuteSqlTranWithIndentity(Hashtable)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="757">'DbHelperSQLP.ExecuteSqlTranWithIndentity(Hashtable)' 声明类型为 'int' 的变量 'val'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="762">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.ExecuteSqlTranWithIndentity(Hashtable)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="740">在方法 'DbHelperSQLP.ExecuteSqlTranWithIndentity(Hashtable)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="745">在外部可见方法 'DbHelperSQLP.ExecuteSqlTranWithIndentity(Hashtable)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="67">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.Exists(string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="116">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.Exists(string, params SqlParameter[])' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxID(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Field" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="45">在成员 'DbHelperSQLP.GetMaxID(string, string)' 中，更正参数名称 'FieldName' 中“Field”的大小写，将其改为“field”。</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="45">更正成员名称 'DbHelperSQLP.GetMaxID(string, string)' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="45">在成员 'DbHelperSQLP.GetMaxID(string, string)' 中，更正参数名称 'TableName' 中“Table”的大小写，将其改为“table”。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="54">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.GetMaxID(string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="428">在成员 'DbHelperSQLP.GetSingle(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="428">在成员 'DbHelperSQLP.GetSingle(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="446">'DbHelperSQLP.GetSingle(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="449">可以在方法 'DbHelperSQLP.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 449</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="431">传递给 'DbHelperSQLP.GetSingle(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="783">在成员 'DbHelperSQLP.GetSingle(string, params SqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="783">在成员 'DbHelperSQLP.GetSingle(string, params SqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="802">'DbHelperSQLP.GetSingle(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="455">在成员 'DbHelperSQLP.GetSingle(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="455">在成员 'DbHelperSQLP.GetSingle(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="455">在成员 'DbHelperSQLP.GetSingle(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="474">'DbHelperSQLP.GetSingle(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="477">可以在方法 'DbHelperSQLP.GetSingle(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 477</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="458">传递给 'DbHelperSQLP.GetSingle(string, int)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="872">传递给 'DbHelperSQLP.PrepareCommand(SqlCommand, SqlConnection, SqlTransaction, string, SqlParameter[])' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="521">'DbHelperSQLP.Query(string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="509">在成员 'DbHelperSQLP.Query(string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="509">在成员 'DbHelperSQLP.Query(string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="512">只要 'DbHelperSQLP.Query(string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="512">在方法 'DbHelperSQLP.Query(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="516">在方法 'DbHelperSQLP.Query(string)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="516">传递给 'DbHelperSQLP.Query(string)' 中的 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="859">'DbHelperSQLP.Query(string, params SqlParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="844">在成员 'DbHelperSQLP.Query(string, params SqlParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="844">在成员 'DbHelperSQLP.Query(string, params SqlParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="851">只要 'DbHelperSQLP.Query(string, params SqlParameter[])' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="851">在方法 'DbHelperSQLP.Query(string, params SqlParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="847">在方法 'DbHelperSQLP.Query(string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="540">'DbHelperSQLP.Query(string, int)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="527">在成员 'DbHelperSQLP.Query(string, int)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="527">在成员 'DbHelperSQLP.Query(string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="527">在成员 'DbHelperSQLP.Query(string, int)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="530">只要 'DbHelperSQLP.Query(string, int)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="530">在方法 'DbHelperSQLP.Query(string, int)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="534">在方法 'DbHelperSQLP.Query(string, int)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="534">传递给 'DbHelperSQLP.Query(string, int)' 中的 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="988">考虑使用不需要将 'rowsAffected' 作为 out 参数的设计。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="927">只要 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="933">可以在方法 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 933</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="927">在方法 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string)' 中，'dataSet' 对象未按所有异常路径释放。请在对 'dataSet' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="929">在方法 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string)' 中，请在对 'sqlDA' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Times" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="937">在成员 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string, int)' 中，更正参数名称 'Times' 中“Times”的大小写，将其改为“times”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="940">只要 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string, int)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="947">可以在方法 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 947</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="940">在方法 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string, int)' 中，'dataSet' 对象未按所有异常路径释放。请在对 'dataSet' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="942">在方法 'DbHelperSQLP.RunProcedure(string, IDataParameter[], string, int)' 中，请在对 'sqlDA' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TabExists(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Table" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="84">在成员 'DbHelperSQLP.TabExists(string)' 中，更正参数名称 'TableName' 中“Table”的大小写，将其改为“table”。</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DbHelperSQLP.cs" Line="95">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'DbHelperSQLP.TabExists(string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DESEncrypt" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">更正类型名称 'DESEncrypt' 中“DES”的大小写，将其改为“Des”。</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'DESEncrypt' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Decrypt(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="62">在成员 'DESEncrypt.Decrypt(string)' 中，更正参数名称 'Text' 中“Text”的大小写，将其改为“text”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Decrypt(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="72">在成员 'DESEncrypt.Decrypt(string, string)' 中，更正参数名称 'Text' 中“Text”的大小写，将其改为“text”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="73">在方法 'DESEncrypt.Decrypt(string, string)' 中，请在对 'des' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="85">在方法 'DESEncrypt.Decrypt(string, string)' 中，请在对 'ms' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="75">在外部可见方法 'DESEncrypt.Decrypt(string, string)' 中，请在使用参数“Text”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Encrypt(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="23">在成员 'DESEncrypt.Encrypt(string)' 中，更正参数名称 'Text' 中“Text”的大小写，将其改为“text”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Encrypt(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="33">在成员 'DESEncrypt.Encrypt(string, string)' 中，更正参数名称 'Text' 中“Text”的大小写，将其改为“text”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="34">在方法 'DESEncrypt.Encrypt(string, string)' 中，请在对 'des' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="DESEncrypt.cs" Line="39">在方法 'DESEncrypt.Encrypt(string, string)' 中，请在对 'ms' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteNonQuery(System.Data.OracleClient.OracleConnection,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="237">在方法 'OracleHelper.ExecuteNonQuery(OracleConnection, CommandType, string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="214">在方法 'OracleHelper.ExecuteNonQuery(OracleTransaction, CommandType, string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="215">在外部可见方法 'OracleHelper.ExecuteNonQuery(OracleTransaction, CommandType, string, params OracleParameter[])' 中，请在使用参数“trans”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="51">可以在方法 'OracleHelper.ExecuteNonQuery(string, CommandType, string, params OracleParameter[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 51</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="38">在方法 'OracleHelper.ExecuteNonQuery(string, CommandType, string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="258">在方法 'OracleHelper.ExecuteNonQuery(string, string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="259">在方法 'OracleHelper.ExecuteNonQuery(string, string)' 中，请在对 'connection' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="276">在方法 'OracleHelper.ExecuteReader(string, CommandType, string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="277">在方法 'OracleHelper.ExecuteReader(string, CommandType, string, params OracleParameter[])' 中，请在对 'conn' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.Data.OracleClient.OracleConnection,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="363">在方法 'OracleHelper.ExecuteScalar(OracleConnection, CommandType, string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="336">在方法 'OracleHelper.ExecuteScalar(OracleTransaction, CommandType, string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="308">在方法 'OracleHelper.ExecuteScalar(string, CommandType, string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.String,System.Collections.Generic.List`1&lt;Maticsoft.DBUtility.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="465">更改 'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 中的 'List&lt;CommandInfo&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="485">'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="500">'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="506">'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="515">'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="523">'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="482">由于 'string.ToLower()' 的行为可能因当前用户的区域设置不同而不同，请将 'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.ToLower(CultureInfo)' 的调用。如果要向用户显示 'string.ToLower(CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="495">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="482">由于 'string.IndexOf(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 中的此调用替换为对 'string.IndexOf(string, StringComparison)' 的调用。如果要向用户显示 'string.IndexOf(string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="534">可以在方法 'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 中多次释放对象 'conn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 534</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="469">在方法 'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="475">在外部可见方法 'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 中，请在使用参数“cmdList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="542">更改 'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 中的 'List&lt;string&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="565">'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="542">在成员 'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 中，更正参数名称 'SQLStringList' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="574">可以在方法 'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 中多次释放对象 'conn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 574</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="546">在方法 'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="556">传递给 'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'sql'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
            <Message Id="1" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="552">在外部可见方法 'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 中，请在使用参数“SQLStringList”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exists(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="187">由于 'int.Parse(string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'OracleHelper.Exists(string, string)' 中的此调用替换为对 'int.Parse(string, IFormatProvider)' 的调用。如果 'int.Parse(string, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="164">'OracleHelper.GetSingle(string, string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="144">在成员 'OracleHelper.GetSingle(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="144">在成员 'OracleHelper.GetSingle(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="172">可以在方法 'OracleHelper.GetSingle(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 172</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="147">传递给 'OracleHelper.GetSingle(string, string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OraBool(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bool" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="454">考虑将成员名称 'OracleHelper.OraBool(string)' 中特定于语言的数据类型标识符“Bool”替换为不依赖于语言的等效词条或者更通用的词条，如“value”。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="455">在外部可见方法 'OracleHelper.OraBool(string)' 中，请在使用参数“value”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OracleClient.OracleCommand,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="420">传递给 'OracleHelper.PrepareCommand(OracleCommand, OracleConnection, OracleTransaction, CommandType, string, OracleParameter[])' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OracleClient.OracleCommand,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="120">传递给 'OracleHelper.PrepareCommand(OracleCommand, OracleConnection, OracleTransaction, string, OracleParameter[])' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="72">'OracleHelper.Query(string, string)' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="60">在成员 'OracleHelper.Query(string, string)' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="60">在成员 'OracleHelper.Query(string, string)' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="63">只要 'OracleHelper.Query(string, string)' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="81">可以在方法 'OracleHelper.Query(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 81</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="63">在方法 'OracleHelper.Query(string, string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="67">在方法 'OracleHelper.Query(string, string)' 中，请在对 'command' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="67">传递给 'OracleHelper.Query(string, string)' 中的 'OracleDataAdapter.OracleDataAdapter(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="101">'OracleHelper.Query(string, string, params OracleParameter[])' 创建类型为 'Exception' 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="86">在成员 'OracleHelper.Query(string, string, params OracleParameter[])' 中，更正参数名称 'SQLString' 中“SQL”的大小写，将其改为“sql”。</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="86">在成员 'OracleHelper.Query(string, string, params OracleParameter[])' 中，考虑将参数名称 'SQLString' 中的数据类型标识符“String”替换为一个更通用的词条，如“value”。</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="93">只要 'OracleHelper.Query(string, string, params OracleParameter[])' 创建了 DataSet 类型的实例，就必须设置这一 Locale 属性。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="110">可以在方法 'OracleHelper.Query(string, string, params OracleParameter[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 110</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="93">在方法 'OracleHelper.Query(string, string, params OracleParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="OracleHelper.cs" Line="89">在方法 'OracleHelper.Query(string, string, params OracleParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PubConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">由于类型 'PubConstant' 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ConnectionString" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="Breaking">
             <Issue Name="SameType" Certainty="95" Level="Error" Path="h:\Repository\SZY\DBUtility" File="PubConstant.cs" Line="14">由于存在方法 'PubConstant.GetConnectionString(string)'，属性名 'PubConstant.ConnectionString' 会造成混淆。请重命名或移除两者中的一个。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="75">在方法 'SqlHelper.ExecuteNonQuery(SqlConnection, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="98">在方法 'SqlHelper.ExecuteNonQuery(SqlTransaction, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message Id="0" TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="99">在外部可见方法 'SqlHelper.ExecuteNonQuery(SqlTransaction, CommandType, string, params SqlParameter[])' 中，请在使用参数“trans”之前先对其进行验证。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="48">在方法 'SqlHelper.ExecuteNonQuery(string, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="120">在方法 'SqlHelper.ExecuteReader(string, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="121">在方法 'SqlHelper.ExecuteReader(string, CommandType, string, params SqlParameter[])' 中，请在对 'conn' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="182">在方法 'SqlHelper.ExecuteScalar(SqlConnection, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="155">在方法 'SqlHelper.ExecuteScalar(string, CommandType, string, params SqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2015-09-07 06:55:55Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="h:\Repository\SZY\DBUtility" File="SQLHelper.cs" Line="235">传递给 'SqlHelper.PrepareCommand(SqlCommand, SqlConnection, SqlTransaction, CommandType, string, SqlParameter[])' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>抽象类型不应具有构造函数</Name>
   <Description>抽象类型的公共构造函数没有意义，因为您无法创建抽象类型的实例。</Description>
   <Resolution Name="Default">将 {0} 中所有公共构造函数的可访问性改为 protected。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>程序集应具有有效的强名称</Name>
   <Description>程序集没有强名称，强名称无效，或者强名称只有经过计算机配置后才有效。不应部署处于这种状态的程序集。出现这种情况最常见原因有: 1) 对程序集进行签名后，修改了该程序集的内容；2) 签名过程失败；3) 延迟了程序集签名；4) 存在一个允许检查通过(原本不应通过)的注册表项。</Description>
   <Resolution Name="NoStrongName">用强名称密钥对 {0} 进行签名。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>避免使用 out 参数</Name>
   <Description>使用 out 参数可能表示存在设计缺陷。虽然有时允许使用 out 参数，但频繁使用这些参数则表示设计没有遵守托管代码的设计原则。</Description>
   <Resolution Name="Default">考虑使用不需要将 {0} 作为 out 参数的设计。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>不要捕捉一般异常类型</Name>
   <Description>不应捕捉 Exception 或 SystemException。捕捉一般异常类型会使库用户看不到运行时问题，并会使调试复杂化。您应该仅捕捉自己可以进行适当处理的异常。</Description>
   <Resolution Name="Default">修改 {0} 以便捕捉比 {1} 更具体的异常，或者再次引发该异常。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>不要声明可见实例字段</Name>
   <Description>在其声明类型的外部可见的实例字段会限制您更改这些数据项的实现详细信息的能力。请改用属性。属性不会降低可用性或性能，并且能够提供灵活性，因为它们隐藏了基础数据的实现详细信息。</Description>
   <Resolution Name="Default">由于字段 {0} 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>不要公开泛型列表</Name>
   <Description>不要在对象模型中公开 List&lt;T&gt;。应使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;。List&lt;T&gt; 应通过实现来使用，而不是在对象模型 API 中使用。List&lt;T&gt; 针对性能进行了优化，但代价是需要长期进行版本管理。例如，如果将 List&lt;T&gt; 返回到客户端代码，您将无法再在客户端代码修改集合时收到通知。</Description>
   <Resolution Name="Default">更改 {1} 中的 {0} 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>不要引发保留的异常类型</Name>
   <Description>用户代码不应创建和引发某些类型的异常，即属于运行时保留的异常类型或太通用的异常类型。太通用的异常类型包括 Exception、SystemException 和 ApplicationException。运行时保留的异常类型包括 ThreadAbortException、OutOfMemoryException、ExecutionEngineException 和 IndexOutOfRangeException。</Description>
   <Resolution Name="TooGeneric">{0} 创建类型为 {1} 的异常，该异常类型不够具体，不应由用户代码引发。如有可能引发此异常实例，请使用其他异常类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>标识符的大小写应当正确</Name>
   <Description>类型、命名空间和成员标识符应采用 Pascal 大小写格式。参数标识符应采用 Camel 大小写格式。这些标识符内由两个字母组成的首字母缩略词应全部大写，例如，应采用 System.IO，而不是 System.Io。由三个或更多个字母组成的首字母缩略词应采用 Pascal 大小写格式，例如，应采用 System.Xml，而不是 System.XML。Pascal 大小写格式约定每个单词的首字母大写，如 BackColor。Camel 大小写格式约定第一个单词的首字母小写，所有后续单词的首字母都大写，如 backgroundColor。尽管有些由两个字母组成的首字母缩略词习惯采用不完全大写形式，但不能因此而排斥此规则。例如，“DbConnection”很常见，但并不正确，应采用 DBConnection。为了与现有的非托管符号方案兼容，可能需要违反此规则。但一般来说，这些符号在使用它们的程序集之外不可见。</Description>
   <Resolution Name="Assembly">更正程序集名称 {1} 中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Resolution Name="MemberAbbreviation">更正成员名称 {1} 中“{0}”的大小写，将其改为“{2}”。“{2}”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Resolution>
   <Resolution Name="MemberParameter">在成员 {0} 中，更正参数名称 {2} 中“{1}”的大小写，将其改为“{3}”。</Resolution>
   <Resolution Name="Type">更正类型名称 {1} 中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>标识符不应包含类型名称</Name>
   <Description>应避免在参数和成员中使用特定于某一种语言的类型名称，避免在参数中使用数据类型标识符。类型名对于所有开发人员来说可能不够直观。建议选用通用名称，如“value”。如果不足以区分，应确保采用 .NET Framework 库中定义的类型名，并完全避免采用特定于某一种语言的类型名称。例如，特定于 C# 的类型名有“float”(如果通用名称不足以区分，则使用“Single”)和“ulong”(如果通用名称不足以区分，则使用“UInt64”)等等。</Description>
   <Resolution Name="LanguageIndependentMemberParameter">在成员 {0} 中，考虑将参数名称 {2} 中的数据类型标识符“{1}”替换为一个更通用的词条，如“value”。</Resolution>
   <Resolution Name="LanguageSpecificMember">考虑将成员名称 {1} 中特定于语言的数据类型标识符“{0}”替换为不依赖于语言的等效词条或者更通用的词条，如“value”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>用 CLSCompliantAttribute 标记程序集</Name>
   <Description>程序集应使用 CLSCompliant 特性显式说明其 ClS 遵从性。没有此特性的程序集不符合 CLS。即使程序集、模块或类型的某些部分不符合 CLS，这些程序集、模块或类型本身也可以是符合 CLS 的。适用下列规则:  1) 如果元素标记为 CLSCompliant，则所有不符合 CLS 的成员都必须有参数设置为 false 的 CLSCompliant 特性。2) 对于每个不符合 CLS 的成员，都必须提供一个相应的符合 CLS 的备选成员。</Description>
   <Resolution Name="Default">使用 CLSCompliant(true)来标记 {0}，因为它公开外部可见的类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithComVisible" Category="Microsoft.Design" CheckId="CA1017">
   <Name>用 ComVisibleAttribute 标记程序集</Name>
   <Description>System.Runtime.InteropServices.ComVisible 特性指示 COM 客户端能否使用库。良好的设计要求开发人员显式指示 COM 可见性。此特性的默认值为“true”。但最佳设计应是: 将程序集的 ComVisible 特性标记为 false，然后根据需要将类型、接口和单个成员的 ComVisible 特性标记为 true。</Description>
   <Resolution Name="NoAttribute">因为 {0} 公开外部可见的类型，请在程序集级别使用 ComVisible(false)来标记它，然后使用 ComVisible(true)来标记该程序集内应当向 COM 客户端公开的所有类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182157.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError, Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>非常量字段不应是可见的</Name>
   <Description>除非您使用锁来小心地管理对静态字段的访问，否则这些字段应为常量。如果使用静态变量而不保证它们是线程安全的，则可能威胁到执行状态。此规则适用于托管代码库。如果分析的程序集是应用程序，则忽略此规则冲突通常是安全的。</Description>
   <Resolution Name="Default">考虑将 {0} 设为非公共的或使它成为常量。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>属性名不应与 get 方法冲突。</Name>
   <Description>发现与某一属性同名的 Get 方法。Get 方法和属性的名称应能够明确区分其功能上的差异。有关如何选择属性名以区分于方法名的信息，请参阅设计指南。</Description>
   <Resolution Name="SameType">由于存在方法 {1}，属性名 {0} 会造成混淆。请重命名或移除两者中的一个。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>移除未使用的局部变量</Name>
   <Description>移除方法实现中未使用过的或只赋过值的局部变量。</Description>
   <Resolution Name="Default">{0} 声明类型为 {2} 的变量 {1}，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>再次引发以保留堆栈详细信息</Name>
   <Description>重复引发捕获的异常时，请使用 IL 再次引发指令保留原始堆栈详细信息。</Description>
   <Resolution Name="Default">{0} 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>设置数据类型的区域设置</Name>
   <Description>在多数情况下，应将 DataSet 和 DataTable 实例的 Locale 显式设置为 CultureInfo.InvariantCulture。在创建 DataSet 或 DataTable 实例时，将 Locale 设置为当前区域。在多数情况下，应将 Locale 设置为 CultureInfo.InvariantCulture，以保证所有区域中的排序行为都正确。</Description>
   <Resolution Name="Default">只要 {1} 创建了 {0} 类型的实例，就必须设置这一 Locale 属性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>指定 CultureInfo</Name>
   <Description>如果存在一个采用 CultureInfo 参数的重载，则应始终调用该重载，而不调用未采用该参数的重载。CultureInfo 类型包含区域性特定的信息，这些信息是执行数字和字符串运算(如大小写转换、格式设置和字符串比较)所必需的。如果区域性之间的转换和分析行为应始终不变，请指定 CultureInfo.InvariantCulture，否则，请指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="Default">由于 {0} 的行为可能因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>指定 IFormatProvider</Name>
   <Description>如果存在一个采用 IFormatProvider 参数的重载，则应始终调用该重载，而不调用未采用该参数的重载。运行时中的某些方法可以将值与字符串表示形式相互进行转换，并采用一个字符串参数。该参数中包含一个或多个称为格式说明符的字符，用于指示如何对值进行转换。如果格式说明符的含义因区域性而异，则格式设置对象提供在字符串表示形式中使用的实际字符。如果排序和比较行为不得因区域性而改变，请指定 CultureInfo.InvariantCulture，否则，请指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="IFormatProviderAlternate">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果 {2} 的结果将基于用户的输入，请指定 {3} 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 {4}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>指定 StringComparison</Name>
   <Description>如果存在采用 StringComparison 参数的重载，则始终先调用此重载，而不是那些不接受该参数的重载。</Description>
   <Resolution Name="Default">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>静态容器类型不应具有构造函数</Name>
   <Description>不需要创建只定义静态成员的类型的实例。如果没有指定构造函数，许多编译器都会自动添加公共的默认构造函数。为了避免出现这种情况，可能需要添加一个空的私有构造函数。</Description>
   <Resolution Name="CSharp2_0">由于类型 {0} 仅包含“static”成员，因此将它标记为“static”可阻止编译器添加默认公共构造函数。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>不要多次释放对象</Name>
   <Description>可以多次调用正确实现的 Dispose 方法，而不会引发异常。但是，并不保证所有情况下都会如此。若要避免生成 System.ObjectDisposedException，您不应对一个对象多次调用 Dispose。</Description>
   <Resolution Name="Default">可以在方法 {1} 中多次释放对象 {0}。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 947</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>丢失范围之前释放对象</Name>
   <Description>如果在对某个可释放对象的所有引用超出范围之前未显式释放该对象，则当垃圾回收器运行该对象的终结器时，会在某个不确定时间释放该对象。由于可能会发生阻止该对象的终结器运行的意外事件，因此应改为显式释放该对象。</Description>
   <Resolution Name="ExceptionEdge">在方法 {0} 中，{1} 对象未按所有异常路径释放。请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Resolution Name="NonExceptionEdge">在方法 {0} 中，请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100">
   <Name>检查 SQL 查询是否存在安全漏洞</Name>
   <Description>通过用户输入生成的 SQL 命令字符串容易受到 SQL 注入式攻击。Microsoft SQL Server 和其他数据库服务器支持存储过程和参数化 SQL 查询，这将降低受到注入式攻击的风险。</Description>
   <Resolution Name="WithNonLiterals">传递给 {1} 中的 {0} 的查询字符串可能包含以下变量 {2}。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="验证公共方法的参数" Category="Microsoft.Design" CheckId="CA1062">
   <Name>验证公共方法的参数</Name>
   <Description>应检查传递给外部可见方法的所有引用参数是否为 Null (在 VB 中为 Nothing)。如果适用，在参数为 null 时，引发 System.ArgumentNullException。</Description>
   <Resolution Name="Default">在外部可见方法 {0} 中，请在使用参数“{1}”之前先对其进行验证。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
